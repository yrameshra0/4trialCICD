---
- 
  name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
  hosts: tag_Name_minions
  gather_facts: False
  become: yes
  tasks:
    - name: Waiting for ssh
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      connection: local

- 
  name: Installing Docker CE
  hosts: tag_Name_minions
  gather_facts: False
  become: yes
  tasks:
    - name: Install docker - adding GPG key
      raw: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      register: output
      changed_when: output.stdout != ""  
    - name: Install docker - Adding Docker to APT sources
      raw: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      register: output
      changed_when: output.stdout != ""  
    - name: Install docker - Updating package database with the Docker packages
      raw: apt-get -y update
      register: output
      changed_when: output.stdout != ""
    - name: Wait for automatic system updates
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;
    - name: Install docker - Installing from the Docker repo instead of the default Ubuntu 
      raw: apt-cache policy docker-ce
      register: output
      changed_when: output.stdout != ""
    - name: Wait for automatic system updates
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;
    - name: Install docker
      raw: apt-get -y install docker-ce=5:18.09.0~3-0~ubuntu-bionic
      register: output
      changed_when: output.stdout != ""        
    - name: Gathering Facts
      setup:

- 
  name: Copying Files To Hosts
  hosts: tag_Name_minions
  gather_facts: False
  become: yes
  tasks:
    - name: Copying mountpointfixer.sh
      copy:
        src: /home/ubuntu/ansible/mountpointfixer.sh
        dest: /home/ubuntu/mountpointfixer.sh
        follow: no
    
- 
  name: Mounting additional mount point for Jenkins data on Master
  hosts: tag_Role_cortana
  gather_facts: False
  become: yes
  tasks:
    - name: Making filesystem and mounting
      shell: bash /home/ubuntu/mountpointfixer.sh

- 
  name: JENKINS FOLDER CREATION
  hosts: tag_Role_cortana
  gather_facts: False
  become: yes
  tasks:
    - name: Create a directory if it does not exist
      file:
        path: /opt/persistent_data/jenkins_home
        state: directory
        mode: '0755'

- 
  name: Mounting additional mount point for other instances
  hosts: tag_Role_masterChief
  gather_facts: False
  become: yes
  tasks:
    - name: Making filesystem and mounting
      shell: bash /home/ubuntu/mountpointfixer.sh
- 
  name: Initialize Swarm Master
  hosts: tag_Role_cortana
  gather_facts: yes
  become: true
  tasks:
    - 
      command: "docker swarm init --advertise-addr {{inventory_hostname}}"
    - 
      command: "docker swarm join-token -q worker"
      register: swarm_token
    - 
      set_fact: swarmtoken="{{swarm_token.stdout}}"
    - 
      debug:
        msg: "System {{inventory_hostname}} has swarm token {{swarm_token.stdout}}"  

- 
  name: Join Swarm Nodes
  hosts: tag_Role_masterChief
  gather_facts: yes
  become: true
  tasks:
    - 
      debug:
        msg: "Perivious step swarm token {{hostvars[groups['tag_Role_cortana'][0]].swarmtoken}} and inventory hostname {{hostvars[groups['tag_Role_cortana'][0]].inventory_hostname}}"
    - 
      command: "docker swarm join --advertise-addr {{inventory_hostname}} --token {{hostvars[groups['tag_Role_cortana'][0]].swarmtoken}} {{hostvars[groups['tag_Role_cortana'][0]].inventory_hostname}}:2377"

- 
  name: Copy docker compose file
  hosts: tag_Role_cortana
  gather_facts: yes
  become: true
  tasks:
    -
      file:
        path: ~/compose
        state: directory
    -
      copy:
          src: ~/compose/root-stack.yml
          dest: ~/compose/root-stack.yml      

- 
  name: Start root docker stack
  hosts: tag_Role_cortana
  gather_facts: yes
  become: true
  tasks:
    -
      args:
        chdir: ~/compose
      command: "docker stack deploy -c root-stack.yml root"

- 
  name: Getting Jenkins Logs
  hosts: tag_Role_cortana
  gather_facts: yes
  become: true
  tasks:
    -
      shell: "docker service logs -t root_jenkins 2>&1 |  grep -A 3 password"
      register: root_jenkins_logs
      until: root_jenkins_logs.stdout != ""
      retries: 10
      delay: 10
      ignore_errors: true
    - 
      debug:
        msg: "{{root_jenkins_logs.stdout_lines}}" 
              